<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiangshangban.device.dao.DoorEmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.xiangshangban.device.bean.DoorEmployee" >
    <id column="employee_id" property="employeeId" jdbcType="VARCHAR" />
    <result column="employee_name" property="employeeName" jdbcType="VARCHAR" />
    <result column="door_id" property="doorId" jdbcType="VARCHAR" />
    <result column="door_name" property="doorName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    employee_id, employee_name, door_id, door_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from door_employee
    where employee_id = #{employeeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from door_employee
    where employee_id = #{employeeId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xiangshangban.device.bean.DoorEmployee" >
    insert into door_employee (employee_id, employee_name, door_id, 
      door_name)
    values (#{employeeId,jdbcType=VARCHAR}, #{employeeName,jdbcType=VARCHAR}, #{doorId,jdbcType=VARCHAR}, 
      #{doorName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiangshangban.device.bean.DoorEmployee" >
    insert into door_employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="employeeName != null" >
        employee_name,
      </if>
      <if test="doorId != null" >
        door_id,
      </if>
      <if test="doorName != null" >
        door_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="employeeId != null" >
        #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null" >
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="doorId != null" >
        #{doorId,jdbcType=VARCHAR},
      </if>
      <if test="doorName != null" >
        #{doorName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiangshangban.device.bean.DoorEmployee" >
    update door_employee
    <set >
      <if test="employeeName != null" >
        employee_name = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="doorId != null" >
        door_id = #{doorId,jdbcType=VARCHAR},
      </if>
      <if test="doorName != null" >
        door_name = #{doorName,jdbcType=VARCHAR},
      </if>
    </set>
    where employee_id = #{employeeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiangshangban.device.bean.DoorEmployee" >
    update door_employee
    set employee_name = #{employeeName,jdbcType=VARCHAR},
      door_id = #{doorId,jdbcType=VARCHAR},
      door_name = #{doorName,jdbcType=VARCHAR}
    where employee_id = #{employeeId,jdbcType=VARCHAR}
  </update>

  <select id="findIfExist" resultMap="BaseResultMap" parameterType="com.xiangshangban.device.bean.DoorEmployee">
    SELECT * FROM door_employee
    WHERE 1=1
    <if test="doorId != null and doorId != ''" >
      AND door_id = #{doorId,jdbcType=VARCHAR}
    </if>
    <if test="doorName != null and doorName != ''" >
      AND door_name = #{doorName,jdbcType=VARCHAR}
    </if>
    <if test="employeeId != null and employeeId != ''" >
      AND employee_id = #{employeeId,jdbcType=VARCHAR}
    </if>
    <if test="employeeName != null and employeeName != ''" >
      AND employee_name = #{employeeName,jdbcType=VARCHAR}
    </if>
  </select>

  <!--###############<授权中心>####################-->
  <!--查询门所关联的人员的信息：手机号、人脸、NFC数量-->
  <select id="queryDoorEmployeeInfo" parameterType="Map" resultType="map">
    select A.door_id,door_name,B.employee_phone,employee_face,employee_nfc from door_employee A,employee_ B where A.employee_id = B.employee_id
      <if test="doorName!=null and doorName!=''">
        and A.door_name like #{doorEmployee.doorName}
      </if>
    <if test="companyId!=null and  companyId!=''">
        and B.employee_company_id = #{companyId}
    </if>
    order by A.door_id
  </select>

  <!--查询门的命令下发的时间-->
  <select id="selectSendTime" parameterType="String" resultType="map">
    select device_id,max(send_time) sendtime from door_cmd where action_code in('2001','3001') and device_id in
    (select device_id from door_
     <where>
       <if test="doorName!=null and doorName!=''">
         door_name like #{doorName}
       </if>
     </where>
   )
   group by device_id
  </select>


  <!--根据设备id查询门的id-->
  <select id="selectDoorIdByDeviceId" parameterType="String" resultType="String">
    select door_id from door_ where device_id = #{deviceId}
  </select>

<!--查询门关联的用户的权限信息(首页展示周一最早的开门时间段)-->
  <select id="selectRelateEmpPermissionInfo" parameterType="Map" resultType="map">
    select Q.* from (select F.* from (select DISTINCT W.*,Y.status from (select S.*,X.lasttime from (select A.employee_id,day_of_week,range_start_time,range_end_time,range_door_open_type,B.employee_name,employee_department_name
    from time_range_common_employee A left join employee_ B on A.employee_id = B.employee_id where A.day_of_week = '1' and A.employee_id in
    (select employee_id from door_employee where door_id = '001')) S left join (select employee_id,max(send_time) lasttime from door_cmd where action_code = '3001' and status != '6' group by employee_id) X
    on S.employee_id = X.employee_id ) W left join (select status,send_time from door_cmd) Y on W.lasttime = Y.send_time) F where F.employee_id in
    (select H.employee_id from(select employee_id,min(range_start_time) earlytime from time_range_common_employee where day_of_week = '1' group by employee_id) H) and
    F.range_start_time in (select H.earlytime from(select employee_id,min(range_start_time) earlytime from time_range_common_employee where day_of_week = '1' group by employee_id) H)) Q
    <where>
      <if test="empName!=null and empName!=''">
        Q.employee_name like #{empName}
      </if>
      <if test="deptName!=null and deptName!=''">
        and Q.employee_department_name like #{deptName}
      </if>
      <if test="rangeStartTime!=null and rangeStartTime!=''">
        and Q.range_start_time between #{rangeStartTime} and #{rangeEndTime}
      </if>
      <if test="rangeEndTime!=null and rangeEndTime!=''">
        and Q.range_end_time between #{rangeStartTime} and #{rangeEndTime}
      </if>
      <if test="openType!=null and openType!=''">
        and Q.range_door_open_type = #{openType}
      </if>
    </where>
  </select>

  <!--查询有门禁权限的人员的一周开门时间段-->
  <select id="selectAWeekOpenTime" parameterType="String" resultType="map">
    select day_of_week,range_start_time,range_end_time,range_door_open_type from time_range_common_employee where employee_id = #{empId} order by range_start_time
  </select>
</mapper>